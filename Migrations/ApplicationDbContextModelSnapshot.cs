// <auto-generated />
using System;
using COMP2139_Assignment1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace COMP2139_Assignment1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("COMP2139_Assignment1.Models.Cars", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<DateTime>("AvailabilityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AvailabilityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CartID")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RentalCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarId");

                    b.HasIndex("CartID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Cart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartID"));

                    b.HasKey("CartID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.FlightCart", b =>
                {
                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.Property<int>("CartID")
                        .HasColumnType("int");

                    b.HasKey("FlightID", "CartID");

                    b.HasIndex("CartID");

                    b.ToTable("FlightCarts");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Flights", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("BusinessPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("EconomyPrice")
                        .HasColumnType("real");

                    b.Property<string>("FlightCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxPassengersBusiness")
                        .HasColumnType("int");

                    b.Property<int>("MaxPassengersEconomy")
                        .HasColumnType("int");

                    b.Property<int>("MaxPassengersTotal")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassengersBookedBusiness")
                        .HasColumnType("int");

                    b.Property<int?>("PassengersBookedEconomy")
                        .HasColumnType("int");

                    b.Property<int?>("PassengersBookedTotal")
                        .HasColumnType("int");

                    b.Property<float>("TotalFlightTime")
                        .HasColumnType("real");

                    b.HasKey("FlightId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Hotels", b =>
                {
                    b.Property<int>("HotelsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelsId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AvailabilityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AvailabilityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CartID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelsId");

                    b.HasIndex("CartID");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("bookingPlatform.Models.GuestUsers", b =>
                {
                    b.Property<int>("GuestUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestUserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuestUserId");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Cars", b =>
                {
                    b.HasOne("COMP2139_Assignment1.Models.Cart", "Cart")
                        .WithMany("Cars")
                        .HasForeignKey("CartID");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.FlightCart", b =>
                {
                    b.HasOne("COMP2139_Assignment1.Models.Cart", "Cart")
                        .WithMany("FlightCarts")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP2139_Assignment1.Models.Flights", "Flight")
                        .WithMany("FlightCarts")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Hotels", b =>
                {
                    b.HasOne("COMP2139_Assignment1.Models.Cart", "Cart")
                        .WithMany("Hotels")
                        .HasForeignKey("CartID");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Cart", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("FlightCarts");

                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("COMP2139_Assignment1.Models.Flights", b =>
                {
                    b.Navigation("FlightCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
